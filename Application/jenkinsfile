pipeline {
    agent any

    stages {
        stage('Checkout Code') {
            steps {
                echo 'scm git'
                git branch: 'main', url: 'https://github.com/bhaskar0337/REALTIMEPROJECT.git'
            }
        }

        stage('BuildingJar') {
            steps {
                echo 'maven build'
                sh 'cd Application && mvn clean package'
            }
        }

        stage('sonar') {
            steps {
                echo 'scanning project'
                sh 'ls -ltr'
                sh '''cd Application && mvn sonar:sonar \\
                      -Dsonar.host.url=http://54.90.101.54:9000 \\
                      -Dsonar.login=squ_c7ae0f472e2f4f6dce0c77a92f004662af426e65'''
            }
        }

        stage('Build docker image') {
            steps {
                script {
                    echo 'docker image build'
                    sh 'cd Application && docker build -t bhaskar0337/k8s:${BUILD_NUMBER} .'
                }
            }
        }

        stage('docker image scan') {
            steps {
                sh "trivy image bhaskar0337/k8s:${BUILD_NUMBER}"
            }
        }

        stage('Push image to Hub') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'dockerhub', variable: 'dockerhub')]) {
                        sh 'docker login -u bhaskar0337 -p ${dockerhub}'
                    }
                    sh 'docker push bhaskar0337/k8s:${BUILD_NUMBER}'
                }
            }
        }

        stage('Update kubernetes Deployment manifest File') {
            environment {
                GIT_REPO_NAME = "REALTIMEPROJECT"
                GIT_USER_NAME = "bhaskar0337"
            }
            steps {
                echo 'Update Deployment File'
                withCredentials([string(credentialsId: 'githubtoken', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                    git config user.email "bhaskarbachi0337@gmail.com"
                    git config user.name "bhaskar0337"
                    BUILD_NUMBER=${BUILD_NUMBER}

                    sed -i "s/k8s:.*/k8s:${BUILD_NUMBER}/g" Ansible/k8s_deployment.yaml
                    git add .
                    git commit -m "Update deployment image tag to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }

        stage('k8s Deployment using ansible') {
            steps {
                script {
                    ansiblePlaybook credentialsId: 'ssh', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/', playbook: 'Ansible/ansible_k8s_deploy_playbook.yaml'
                }
            }
        }
    }
}
